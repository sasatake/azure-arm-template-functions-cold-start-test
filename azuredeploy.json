{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "prefix": {
      "type": "string"
    }
  },
  "variables": {
    "functions_name": "[concat(parameters('prefix'),'-functions')]",
    "app_service_plan_name": "[concat(parameters('prefix'),'-functions-plan')]",
    "storage_account_name": "[concat(toLower(replace(parameters('prefix'),'-','')),'storage')]",
    "app_insights_name": "[concat(parameters('prefix'),'-insights')]",
    "cosmosdb_account_name": "[concat(parameters('prefix'),'-account')]",
    "cosmosdb_database_name": "[concat(parameters('prefix'),'-database')]",
    "cosmosdb_containers": [
      {
        "name": "User",
        "partitionKey": {
          "paths": [
            "/id"
          ],
          "kind": "Hash"
        }
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('functions_name')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name'))]",
        "[resourceId('Microsoft.Insights/components', variables('app_insights_name'))]"
      ],
      "kind": "functionapp",
      "properties": {
        "name": "[variables('functions_name')]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components',variables('app_insights_name')),'2018-05-01-preview').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components',variables('app_insights_name')),'2018-05-01-preview').ConnectionString]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storage_account_name'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storage_account_name'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage_account_name')), '2019-06-01').keys[0].value,';EndpointSuffix=','core.windows.net')]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functions_name'))]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~12"
            }
          ]
        },
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms',variables('app_service_plan_name'))]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('app_service_plan_name')]",
      "location": "[resourceGroup().location]",
      "tags": {},
      "properties": {
        "name": "[variables('app_service_plan_name')]",
        "computeMode": "Dynamic"
      },
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2018-05-01-preview",
      "name": "[variables('app_insights_name')]",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storage_account_name')]",
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2020-04-01",
      "name": "[variables('cosmosdb_account_name')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "enableFreeTier": true,
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "locations": [
          {
            "locationName": "[resourceGroup().location]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2020-04-01",
      "name": "[concat(variables('cosmosdb_account_name'), '/', variables('cosmosdb_database_name'))]",
      "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosdb_account_name'))]" ],
      "properties": {
        "resource": {
          "id": "[variables('cosmosdb_database_name')]"
        },
        "options": { "throughput": 400 }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2020-04-01",
      "name": "[concat(variables('cosmosdb_account_name'), '/', variables('cosmosdb_database_name'),'/', variables('cosmosdb_containers')[copyIndex()].name)]",
      "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosdb_account_name'), variables('cosmosdb_database_name'))]" ],
      "properties": {
        "resource": {
          "id": "[variables('cosmosdb_containers')[copyIndex()].name]",
          "partitionKey": "[variables('cosmosdb_containers')[copyIndex()].partitionKey]"
        },
        "options": {}
      },
      "copy": {
        "name": "cosmosdb_container_copy",
        "count": "[length(variables('cosmosdb_containers'))]"
      }
    }
  ]
}